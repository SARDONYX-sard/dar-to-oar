[workspace.package]
version = "0.8.0"
description = "DAR to OAR Converter"
categories = ["compilers", "games", "parsing"]
authors = ["SARDONYX-sard"]
license = "MIT OR Apache-2.0"
repository = "https://github.com/SARDONYX-sard/dar-to-oar"
readme = "README.md"
edition = "2021"
rust-version = "1.60"

[workspace]
members = ["core", "cli", "gui/backend"]
default-members = ["cli"]
resolver = "2"

[workspace.dependencies]
serde = { version = "1.0.210", features = ["derive"] }    # Implement (De)Serialize
serde_json = "1.0.128"                                    # core: To json/GUI: To avoid generate_context error.
snafu = "0.8.5"
tokio = { version = "1.40.0" }                            # Async runtime
tracing = { version = "0.1.40" }                          # logger
tracing-subscriber = "0.3.18"
tracing-appender = "0.2.3"

# dev-dependencies
temp-dir = "0.1.14"
pretty_assertions = "1.4.1"                                  # Color diff assertion
quick_tracing = { version = "0.1.5", features = ["derive"] } # Easy logging

# workspace members
dar2oar_core = { path = "./core" }

[workspace.lints.clippy]
all = { level = "warn", priority = -1 }
cargo = { level = "warn", priority = -1 }
nursery = { level = "warn", priority = -1 }

dbg_macro = "warn"
print_stderr = "warn"
print_stdout = "warn"
todo = "warn"
unimplemented = "warn"

derive_partial_eq_without_eq = "allow"
future_not_send = "allow"
multiple_crate_versions = "allow"
pub_with_shorthand = "allow"
redundant_pub_crate = "allow"


# The profile that 'cargo dist' will build with
[profile.dist]
inherits = "release"
lto = "thin"

# Config for 'cargo dist'
[workspace.metadata.dist]
# The preferred cargo-dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.10.0"
# CI backends to support
ci = ["github"]
# The installers to generate for each app
installers = ["shell", "powershell"]
# Target platforms to build apps for (Rust target-triple syntax)
targets = [
  "aarch64-apple-darwin",
  "x86_64-apple-darwin",
  "x86_64-unknown-linux-gnu",
  "x86_64-pc-windows-msvc",
]
# Publish jobs to run in CI
pr-run-mode = "skip"
# Skip checking whether the specified configuration files are up to date
allow-dirty = ["ci"]
